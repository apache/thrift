[
  {
    "name": "c_glib",
    "platforms": [
      "Linux"
    ],
    "server": {
      "delay": 1,
      "command": [
        "test_server"
      ]
    },
    "client": {
      "command": [
        "test_client"
      ]
    },
    "transports": [
      "buffered",
      "framed"
    ],
    "sockets": [
      "ip"
    ],
    "protocols": [
      "binary"
    ],
    "workdir": "c_glib"
  },
  {
    "name": "go",
    "server": {
      "delay": 1,
      "command": [
        "testserver",
        "--certPath=../../keys"
      ]
    },
    "client": {
      "timeout": 6,
      "command": [
        "testclient"
      ]
    },
    "transports": [
      "buffered",
      "framed"
    ],
    "sockets": [
      "ip",
      "ip-ssl"
    ],
    "protocols": [
      "binary",
      "compact",
      "json"
    ],
    "workdir": "go/bin"
  },
  {
    "name": "java",
    "join_args": true,
    "command": [
      "ant",
      "-f",
      "build.xml",
      "-Dno-gen-thrift=\"\"",
      "-Dtestargs"
    ],
    "prepare": [
      "ant",
      "-f",
      "build.xml",
      "compile-test"
    ],
    "server": {
      "delay": 5,
      "extra_args": ["run-testserver"]
    },
    "client": {
      "timeout": 13,
      "extra_args": ["run-testclient"],
      "transports": [
        "http"
      ]
    },
    "transports": [
      "buffered",
      "framed",
      "framed:fastframed"
    ],
    "sockets": [
      "ip-ssl",
      "ip"
    ],
    "protocols": [
      "compact",
      "binary",
      "json"
    ],
    "workdir": "../lib/java"
  },
  {
    "name": "nodejs",
    "env": {
      "NODE_PATH": "../lib"
    },
    "server": {
      "delay": 1,
      "command": [
        "node",
        "server.js",
        "--type=tcp"
      ]
    },
    "client": {
      "timeout": 2.9,
      "command": [
        "node",
        "client.js",
        "--type=tcp"
      ]
    },
    "transports": [
      "buffered",
      "framed"
    ],
    "sockets": [
      "ip-ssl",
      "ip"
    ],
    "protocols": [
      "compact",
      "binary",
      "json"
    ],
    "workdir": "../lib/nodejs/test"
  },
  {
    "name": "hs",
    "server": {
      "command": [
        "TestServer"
      ]
    },
    "client": {
      "timeout": 6,
      "transports": [
        "http"
      ],
      "command": [
        "TestClient"
      ]
    },
    "transports": [
      "buffered",
      "framed"
    ],
    "sockets": [
      "ip"
    ],
    "protocols": [
      "compact",
      "binary",
      "json"
    ],
    "workdir": "hs"
  },
  {
    "name": "py",
    "server": {
      "delay": 1,
      "extra_args": ["TSimpleServer"],
      "command": [
        "TestServer.py",
        "--verbose",
        "--genpydir=gen-py"
      ]
    },
    "client": {
      "timeout": 10,
      "command": [
        "TestClient.py",
        "--host=localhost",
        "--genpydir=gen-py"
      ]
    },
    "transports": [
      "buffered",
      "framed"
    ],
    "sockets": [
      "ip-ssl",
      "ip"
    ],
    "protocols": [
      "compact",
      "binary",
      "json",
      "binary:accel"
    ],
    "workdir": "py"
  },
  {
    "name": "cpp",
    "server": {
      "delay": 2,
      "command": [
        "TestServer"
      ]
    },
    "client": {
      "timeout": 8,
      "command": [
        "TestClient"
      ]
    },
    "transports": [
      "buffered",
      "http",
      "framed"
    ],
    "sockets": [
      "ip-ssl",
      "ip",
      "domain"
    ],
    "protocols": [
      "compact",
      "binary",
      "json"
    ],
    "workdir": "cpp"
  },
  {
    "name": "rb",
    "server": {
      "delay": 1,
      "command": [
        "ruby",
        "../integration/TestServer.rb"
      ]
    },
    "client": {
      "timeout": 5,
      "command": [
        "ruby",
        "../integration/TestClient.rb",
        "--host=127.0.0.1"
      ]
    },
    "transports": [
      "buffered",
      "framed"
    ],
    "sockets": [
      "ip"
    ],
    "protocols": [
      "compact",
      "binary",
      "json",
      "binary:accel"
    ],
    "workdir": "rb/gen-rb"
  },
  {
    "name": "csharp",
    "env": {
      "MONO_PATH": "../.."
    },
    "transports": [
      "buffered",
      "framed"
    ],
    "sockets": [
      "ip",
      "ip-ssl"
    ],
    "protocols": [
      "binary",
      "compact",
      "json"
    ],
    "server": {
      "delay": 3,
      "command": [
        "TestClientServer.exe",
        "server"
      ]
    },
    "client": {
      "timeout": 9,
      "command": [
        "TestClientServer.exe",
        "client"
      ]
    },
    "workdir": "../lib/csharp/test/ThriftTest"
  },
  {
    "name": "perl",
    "transports": [
      "buffered",
      "framed"
    ],
    "sockets": [
      "ip",
      "ip-ssl"
    ],
    "protocols": [
      "binary"
    ],
    "client": {
      "command": [
        "perl",
        "-Igen-perl/",
        "-I../../lib/perl/lib/",
        "TestClient.pl",
        "--cert=../../test/keys/client.pem"
      ]
    },
    "server": {
      "command": [
        "perl",
        "-Igen-perl/",
        "-I../../lib/perl/lib/",
        "TestServer.pl",
        "--cert=../../test/keys/server.pem",
        "--key=../../test/keys/server.key"
      ]
    },
    "workdir": "perl"
  },
  {
    "name": "php",
    "client": {
      "timeout": 6,
      "transports": [
        "buffered",
        "framed"
      ],
      "sockets": [
        "ip"
      ],
      "protocols": [
        "binary",
        "compact",
        "binary:accel"
      ],
      "command": [
        "php",
        "TestClient.php"
      ]
    },
    "workdir": "php"
  },
  {
    "name": "dart",
    "client": {
      "transports": [
        "buffered",
        "framed",
        "http"
      ],
      "sockets": [
        "ip"
      ],
      "protocols": [
        "binary",
        "json"
      ],
      "command": [
        "dart",
        "test_client/bin/main.dart"
      ]
    },
    "workdir": "dart"
  },
  {
    "name": "erl",
    "transports": [
      "buffered",
      "framed"
    ],
    "sockets": [
      "ip",
      "ip-ssl"
    ],
    "protocols": [
      "binary"
    ],
    "client": {
      "command": [
        "erl",
        "+K",
        "true",
        "-noshell",
        "-pa",
        "../../lib/erl/ebin/",
        "-pa",
        "./ebin",
        "-s",
        "test_client",
        "-s",
        "init",
        "stop",
        "-extra"
      ]
    },
    "server": {
      "command": [
        "erl",
        "+K",
        "true",
        "-noshell",
        "-pa",
        "../../lib/erl/ebin/",
        "-pa",
        "./ebin",
        "-s",
        "test_thrift_server",
        "-extra"
      ]
    },
    "workdir": "erl"
  }
]
