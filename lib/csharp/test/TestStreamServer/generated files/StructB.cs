/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace Thrift.Test
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class StructB : TBase
  {
    private StructA _aa;

    public StructA Aa
    {
      get
      {
        return _aa;
      }
      set
      {
        __isset.aa = true;
        this._aa = value;
      }
    }

    public StructA Ab { get; set; }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool aa;
    }

    public StructB() {
    }

    public StructB(StructA ab) : this() {
      this.Ab = ab;
    }

    public void Read (TProtocol iprot)
    {
      bool isset_ab = false;
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Struct) {
              Aa = new StructA();
              Aa.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.Struct) {
              Ab = new StructA();
              Ab.Read(iprot);
              isset_ab = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
      if (!isset_ab)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("StructB");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (Aa != null && __isset.aa) {
        field.Name = "aa";
        field.Type = TType.Struct;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        Aa.Write(oprot);
        oprot.WriteFieldEnd();
      }
      field.Name = "ab";
      field.Type = TType.Struct;
      field.ID = 2;
      oprot.WriteFieldBegin(field);
      Ab.Write(oprot);
      oprot.WriteFieldEnd();
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("StructB(");
      bool __first = true;
      if (Aa != null && __isset.aa) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Aa: ");
        __sb.Append(Aa== null ? "<null>" : Aa.ToString());
      }
      if(!__first) { __sb.Append(", "); }
      __sb.Append("Ab: ");
      __sb.Append(Ab== null ? "<null>" : Ab.ToString());
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
