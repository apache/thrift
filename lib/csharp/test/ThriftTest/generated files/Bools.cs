/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace Thrift.Test
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class Bools : TBase
  {
    private bool _im_true;
    private bool _im_false;

    public bool Im_true
    {
      get
      {
        return _im_true;
      }
      set
      {
        __isset.im_true = true;
        this._im_true = value;
      }
    }

    public bool Im_false
    {
      get
      {
        return _im_false;
      }
      set
      {
        __isset.im_false = true;
        this._im_false = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool im_true;
      public bool im_false;
    }

    public Bools() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Bool) {
              Im_true = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.Bool) {
              Im_false = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("Bools");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.im_true) {
        field.Name = "im_true";
        field.Type = TType.Bool;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(Im_true);
        oprot.WriteFieldEnd();
      }
      if (__isset.im_false) {
        field.Name = "im_false";
        field.Type = TType.Bool;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(Im_false);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("Bools(");
      bool __first = true;
      if (__isset.im_true) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Im_true: ");
        __sb.Append(Im_true);
      }
      if (__isset.im_false) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Im_false: ");
        __sb.Append(Im_false);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
