name: "Build"

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

env:
  BUILD_DEPS: automake bison flex g++ git libboost-all-dev libevent-dev libssl-dev libtool make pkg-config

jobs:
  # TODO windows and macos
  compiler:
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update -yq
          sudo apt-get install -y --no-install-recommends $BUILD_DEPS

      - name: Run bootstrap
        run: ./bootstrap.sh

      - name: Run configure
        run: ./configure --disable-debug --disable-tests --disable-libs

      - name: Run make
        run: make -j$(nproc)

      - name: Run install
        run: make install

      - name: Run thrift version
        run: /usr/local/bin/thrift -version

      # only upload while building ubuntu-20.04
      - name: Archive built thrift compiler
        if: matrix.os == 'ubuntu-20.04'
        uses: actions/upload-artifact@v3
        with:
          name: thrift-compiler
          path: compiler/cpp/thrift
          retention-days: 3

  lib-java-kotlin:
    needs: compiler
    runs-on: ubuntu-20.04
    env:
      GRADLE_VERSION: 6.9.2
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: "gradle"

      - name: Install dependencies
        run: |
          sudo apt-get update -yq
          sudo apt-get install -y --no-install-recommends $BUILD_DEPS
          sudo apt-get install -y wget unzip ant maven

      - name: Setup gradle
        run: |
          wget https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip -q -O /tmp/gradle-$GRADLE_VERSION-bin.zip
          (echo "8b356fd8702d5ffa2e066ed0be45a023a779bba4dd1a68fd11bc2a6bdc981e8f  /tmp/gradle-$GRADLE_VERSION-bin.zip" | sha256sum -c -)
          unzip -d /tmp /tmp/gradle-$GRADLE_VERSION-bin.zip
          sudo mv /tmp/gradle-$GRADLE_VERSION /usr/local/gradle
          sudo ln -s /usr/local/gradle/bin/gradle /usr/local/bin
          gradle --version

      - name: Run spotlessCheck for Java
        run: |
          cd lib/java
          gradle spotlessCheck

      - name: Run ktfmtCheck for Kotlin
        run: |
          cd lib/kotlin
          gradle ktfmtCheck

      - name: Run bootstrap
        run: ./bootstrap.sh

      - name: Run configure
        run: |
          ./configure \
            --disable-debug \
            --disable-tests \
            --disable-dependency-tracking \
            --without-cpp \
            --without-c_glib \
            --with-java \
            --with-kotlin \
            --without-python \
            --without-py3 \
            --without-ruby \
            --without-haxe \
            --without-netstd \
            --without-perl \
            --without-php \
            --without-php_extension \
            --without-dart \
            --without-erlang \
            --without-go \
            --without-d \
            --without-nodejs \
            --without-nodets \
            --without-lua \
            --without-rs \
            --without-swift

      - uses: actions/download-artifact@v3
        with:
          name: thrift-compiler
          path: compiler/cpp

      - name: Run thrift-compiler
        run: |
          chmod a+x compiler/cpp/thrift
          compiler/cpp/thrift -version

      - name: Run make for java
        run: make -C lib/java

      - name: Run make check for java
        run: make -C lib/java check

      - name: Run make for kotlin
        run: make -C lib/kotlin

      - name: Run make check for kotlin
        run: make -C lib/kotlin check

  lib-rust:
    needs: compiler
    runs-on: ubuntu-20.04
    env:
      TOOLCHAIN_VERSION: 1.40.0
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update -yq
          sudo apt-get install -y --no-install-recommends $BUILD_DEPS
          sudo apt-get install -y --no-install-recommends curl

      - name: Setup cargo
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          rustup update
          rustup install $TOOLCHAIN_VERSION
          rustup default $TOOLCHAIN_VERSION
          rustup --version
          cargo --version
          rustc --version

      - name: Run bootstrap
        run: ./bootstrap.sh

      - name: Run configure
        run: |
          ./configure \
            --disable-debug \
            --disable-tests \
            --disable-dependency-tracking \
            --without-cpp \
            --without-c_glib \
            --without-java \
            --without-kotlin \
            --without-python \
            --without-py3 \
            --without-ruby \
            --without-haxe \
            --without-netstd \
            --without-perl \
            --without-php \
            --without-php_extension \
            --without-dart \
            --without-erlang \
            --without-go \
            --without-d \
            --without-nodejs \
            --without-nodets \
            --without-lua \
            --with-rs \
            --without-swift

      - uses: actions/download-artifact@v3
        with:
          name: thrift-compiler
          path: compiler/cpp

      - name: Run thrift-compiler
        run: |
          chmod a+x compiler/cpp/thrift
          compiler/cpp/thrift -version

      - name: Run make rust
        run: make -C lib/rs

  lib-python:
    needs: compiler
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["2.x", "3.x"]
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update -yq
          sudo apt-get install -y --no-install-recommends $BUILD_DEPS
          sudo apt-get install -y --no-install-recommends curl

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Python setup
        run: |
          python -m pip install --upgrade pip setuptools wheel flake8
          python --version
          pip --version

      - name: Run bootstrap
        run: ./bootstrap.sh

      - name: Run configure 2.x
        if: matrix.python-version == '2.x'
        run: |
          ./configure \
            --disable-debug \
            --disable-tests \
            --disable-dependency-tracking \
            --without-cpp \
            --without-c_glib \
            --without-java \
            --without-kotlin \
            --with-python \
            --without-py3 \
            --without-ruby \
            --without-haxe \
            --without-netstd \
            --without-perl \
            --without-php \
            --without-php_extension \
            --without-dart \
            --without-erlang \
            --without-go \
            --without-d \
            --without-nodejs \
            --without-nodets \
            --without-lua \
            --without-rs \
            --without-swift

      - name: Run configure 3.x
        if: matrix.python-version == '3.x'
        run: |
          ./configure \
            --disable-debug \
            --disable-tests \
            --disable-dependency-tracking \
            --without-cpp \
            --without-c_glib \
            --without-java \
            --without-kotlin \
            --without-python \
            --with-py3 \
            --without-ruby \
            --without-haxe \
            --without-netstd \
            --without-perl \
            --without-php \
            --without-php_extension \
            --without-dart \
            --without-erlang \
            --without-go \
            --without-d \
            --without-nodejs \
            --without-nodets \
            --without-lua \
            --without-rs \
            --without-swift

      - uses: actions/download-artifact@v3
        with:
          name: thrift-compiler
          path: compiler/cpp

      - name: Run thrift-compiler
        run: |
          chmod a+x compiler/cpp/thrift
          compiler/cpp/thrift -version

      - name: Run make python
        run: make -C lib/py

